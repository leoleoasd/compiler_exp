int a = 0x1234;
int b = 'a';
char c = 3 + 235;
extern int printf(char*, ...);
char * str = "___Hello world from Cb lang!\n";
struct test{
    int foo;
    char bar;
};
int add(int a, int[] b){
    return a + b[0];
}
struct test fooo(void){
    struct test ret;
    ret.foo = 2;
    ret.bar = 'c';
    return ret;
}
int main(int argc, char** argv){
    auto ret = fooo();
    printf("%d %c\n", ret.foo, ret.bar);
    int[5][2] array;
    int[5]* array_ptr = array;
    struct test ss;
    struct test* ss_pointer = &ss;
    ss.foo = 1234;
    printf(&str[3]);
    printf(str + 3);
    printf("This is %d %d\n", 2 + 1238796, a);
    printf("Argc: %d\n", argc);
    array[0][0] = 0x123;
    printf("array[0][0] = %d\n", array[0][0]);
    printf("array_ptr[0][0] = %d\n", array_ptr[0][0]);
    if(argc == 1) {
        printf("Then\n");
        return -1;
    } else {
        printf("Else\n");
    }
    printf("%d\n", ss.bar);
    int* pointer = &ss.bar;
    *pointer = 0x1234;
    printf("%d\n", ss.bar);
    ss_pointer->foo = 0;
    printf("%d\n", ss.foo);
    printf("A + B = %d\n", add(2, array[0]));
    printf("argv: %s\n", argv[0]);
    1 && printf("not_reached");
    0 && printf("good\n");
    0 || printf("not_reached");
    1 || printf("good\n");
    (0,1) || printf("good\n");
    printf("1+2*3=%d\n", 1 + 2 * 3 * 3 / 3);
    if (!1) {
        printf("not reached");
    } else {
        printf("good\n");
    }
    int i = 0;
    for(i = 0; i < argc; ++ i){
        if (i == 3){
            printf("Break!");
            break;
        } else if(i == 2){
            printf("Contine!");
            continue;
        }
        printf("for %d\n", i);
    }
}
